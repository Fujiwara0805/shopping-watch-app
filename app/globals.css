@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
}

@layer base {
  :root {
    --background: 0 0% 98%;
    --foreground: 25 80% 25%;
    --card: 0 0% 100%;
    --card-foreground: 25 80% 25%;
    --popover: 0 0% 100%;
    --popover-foreground: 25 80% 25%;
    --primary: 25 95% 53%;
    --primary-foreground: 0 0% 98%;
    --secondary: 130 50% 60%;
    --secondary-foreground: 0 0% 9%;
    --muted: 0 0% 96.1%;
    --muted-foreground: 0 0% 45.1%;
    --accent: 45 100% 60%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 84% 56%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 89.8%;
    --input: 0 0% 89.8%;
    --ring: 25 95% 53%;
    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;
    --radius: 0.5rem;
    
    /* Custom color variables for the app */
    --color-orange: 25 95% 53%;
    --color-green: 130 50% 60%;
    --color-yellow: 45 100% 60%;
    --color-gray: 0 0% 96%;
    --color-brown: 25 80% 25%;
    
    /* 動的な viewport height のための CSS 変数 */
    --actual-vh: 100vh;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  
  body {
    @apply bg-background text-foreground;
    font-feature-settings: "rlig" 1, "calt" 1;
    -webkit-tap-highlight-color: transparent;
    text-rendering: optimizeLegibility;
  }
  
  /* Use vh units properly on mobile */
  .h-screen {
    height: 100vh; /* Fallback */
    height: calc(var(--vh, 1vh) * 100);
  }
  
  /* Remove browser styling */
  input, textarea, button, select {
    appearance: none;
    -webkit-appearance: none;
    border-radius: 0;
  }
  
  /* Remove iOS rounded corners */
  input[type="search"] {
    border-radius: 0;
  }
  
  /* Prevent iOS zoom on input focus */
  @media screen and (max-width: 768px) {
    input, textarea, select {
      font-size: 16px;
    }
  }
  
  /* Disable text selection for UI elements */
  .no-select {
    -webkit-user-select: none;
    user-select: none;
  }
  
  /* スマートフォン向けの高さ修正 */
  .dynamic-height {
    height: var(--actual-vh);
    min-height: var(--actual-vh);
  }
  
  /* iOS Safari のアドレスバー対応 */
  @supports (-webkit-touch-callout: none) {
    .ios-height-fix {
      height: -webkit-fill-available;
      min-height: -webkit-fill-available;
    }
  }
  
  /* スワイプコンテナの最適化 */
  .swipe-container {
    height: var(--actual-vh);
    overflow: hidden;
    position: relative;
    /* GPU加速を有効にする */
    transform: translateZ(0);
    will-change: transform;
  }
  
  /* セクション共通スタイル */
  .swipe-section {
    height: var(--actual-vh);
    min-height: var(--actual-vh);
    max-height: var(--actual-vh);
    overflow: hidden;
    position: relative;
  }
  
  /* タッチスクロールの最適化 */
  .touch-optimized {
    -webkit-overflow-scrolling: touch;
    overscroll-behavior: none;
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }
}

@layer utilities {
  /* Animation utilities */
  .animate-in {
    animation: animateIn 0.3s ease-in-out forwards;
  }
  
  .animate-out {
    animation: animateOut 0.3s ease-in-out forwards;
  }
  
  @keyframes animateIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }
  
  @keyframes animateOut {
    from { opacity: 1; transform: translateY(0); }
    to { opacity: 0; transform: translateY(10px); }
  }
  
  /* iOS home indicator area safe space */
  .pb-safe {
    padding-bottom: env(safe-area-inset-bottom, 16px);
  }
  
  /* Prevent overscroll behavior */
  .overscroll-none {
    overscroll-behavior: none;
  }
  
  /* Custom scrollbar */
  .custom-scrollbar::-webkit-scrollbar {
    width: 4px;
  }
  
  .custom-scrollbar::-webkit-scrollbar-track {
    background: transparent;
  }
  
  .custom-scrollbar::-webkit-scrollbar-thumb {
    background-color: hsl(var(--muted-foreground));
    border-radius: 20px;
  }
  
  /* Touch optimization */
  .touch-manipulation {
    touch-action: manipulation;
  }
  
  /* Dynamic viewport height utilities */
  .h-dynamic {
    height: var(--actual-vh);
  }
  
  .min-h-dynamic {
    min-height: var(--actual-vh);
  }
  
  .max-h-dynamic {
    max-height: var(--actual-vh);
  }
}